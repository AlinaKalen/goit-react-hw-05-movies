{"version":3,"file":"static/js/574.b3e30277.chunk.js","mappings":"qLAEA,MAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAcC,gBACFN,EAASO,IAAI,uBACpBC,KAAKC,QAGVC,EAAqBJ,gBACTN,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CAAEQ,MAAOC,MAEHJ,KAAKC,QAGVI,EAAkBP,UAC7B,IAME,aALuBN,EAASO,IAAI,UAADO,OAAWC,GAAM,CAClDZ,OAAQ,CACNa,mBAAoB,oBAGRR,IAIlB,CAHE,MAAOS,GAEP,MADAC,QAAQD,MAAM,8BAA+BA,EAAME,SAC7CF,CACR,GAGWG,EAAgBd,gBACJN,EAASO,IAAI,UAADO,OAAWC,EAAE,YAChCP,KAGLa,EAAmBf,gBACPN,EAASO,IAAI,UAADO,OAAWC,EAAE,cAChCP,I,6FCtChB,MAmCF,EAnCqBc,KACnB,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KACjC,QAAEC,IAAYC,EAAAA,EAAAA,MAepB,OAbAC,EAAAA,EAAAA,YAAU,KACatB,WACnB,IACE,MAAMuB,QAAoBR,EAAAA,EAAAA,IAAiBK,GAC3CF,EAAWK,EAAYpB,QAGzB,CAFE,MAAOQ,GACPC,QAAQD,MAAM,0BAA2BA,EAAME,QACjD,GAGFW,EAAc,GACb,CAACJ,KAGFK,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKV,EAAQW,OACTX,EAAQY,KAAKC,IACXL,EAAAA,EAAAA,KAAA,MAAAE,UACEI,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,EAAAA,WAAeN,SAAA,EAC5BI,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAAA,EAAAA,OAAWN,SAAA,CAAC,WAASG,EAAII,WACvCH,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,YAAUG,EAAIK,eAHZL,EAAIrB,OAQfgB,EAAAA,EAAAA,KAAA,KAAAE,SAAG,yCAEJ,C,gCCpCP,SAAgB,UAAY,0BAA0B,OAAS,uBAAuB,IAAM,oBAAoB,aAAe,6BAA6B,QAAU,wBAAwB,WAAa,2BAA2B,OAAS,uB","sources":["components/Api/Api.js","pages/ReviewPage.jsx","webpack://react-homework-template/./src/components/MoviesList/Movies.module.css?fddf"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '9ec68717ac0ee3cd927e52637a51d9f9';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const fetchMovies = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async (searchQuery) => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`, {\n      params: {\n        append_to_response: 'casts,reviews',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie by ID:', error.message);\n    throw error;\n  }\n};\n\nexport const fetchCastById = async (id) => {\n  const response = await movieApi.get(`/movie/${id}/casts`);\n  return response.data;\n};\n\nexport const fetchReviewsById = async (id) => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n","\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from '../components/Api/Api';\nimport css from '../components/MoviesList/Movies.module.css'\n\n  const ReviewPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await fetchReviewsById(movieId);\n        setReviews(reviewsData.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {!!reviews.length ? (\n        reviews.map((rev) => (\n          <ul key={rev.id}>\n            <li className={css.ReviewList}>\n              <p className={css.Author}>Author: {rev.author}</p>\n              <p>Content: {rev.content}</p>\n            </li>\n          </ul>\n        ))\n      ) : (\n        <p>Sorry, we couldn't find any reviews</p>\n      )}\n    </>\n  );\n};\n\nexport default ReviewPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"MovieList\":\"Movies_MovieList__2lEkh\",\"header\":\"Movies_header__vz94V\",\"cst\":\"Movies_cst__xWtN2\",\"CstContsiner\":\"Movies_CstContsiner__giMxd\",\"cstlist\":\"Movies_cstlist__Ir+vv\",\"ReviewList\":\"Movies_ReviewList__BvK3S\",\"Author\":\"Movies_Author__+argF\"};"],"names":["movieApi","axios","baseURL","params","api_key","fetchMovies","async","get","data","results","fetchMoviesByQuery","query","searchQuery","fetchMoviesById","concat","id","append_to_response","error","console","message","fetchCastById","fetchReviewsById","ReviewPage","reviews","setReviews","useState","movieId","useParams","useEffect","reviewsData","fetchReviews","_jsx","_Fragment","children","length","map","rev","_jsxs","className","css","author","content"],"sourceRoot":""}