{"version":3,"file":"static/js/602.360ca786.chunk.js","mappings":"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","sources":["components/Api/Api.js","pages/MovieDetailsPage.jsx","webpack://react-homework-template/./src/components/SearchForm/Form.module.css?e177"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '9ec68717ac0ee3cd927e52637a51d9f9';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const fetchMovies = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async (searchQuery) => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`, {\n      params: {\n        append_to_response: 'casts,reviews',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie by ID:', error.message);\n    throw error;\n  }\n};\n\nexport const fetchCastById = async (id) => {\n  const response = await movieApi.get(`/movie/${id}/casts`);\n  return response.data;\n};\n\nexport const fetchReviewsById = async (id) => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesById } from '../components/Api/Api';\nimport css from '../components/SearchForm/Form.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({\n    title: '',\n    poster_path: '',\n    popularity: 0,\n    overview: '',\n    genres: [],\n  });\n  const [movieLocation, setMovieLocation] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.state?.from) setMovieLocation(location.state.from);\n  }, [location.state]);\n\n  useEffect(() => {\n    const fetchById = async () => {\n      try {\n        if (movieId) {\n          const movieData = await fetchMoviesById(movieId);\n          setMovie(movieData);\n        }\n      } catch (error) {\n        console.error('Error fetching movie by ID:', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchById();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && movieId && (\n        <>\n          <Link to={movieLocation || '/'}>\n            <button className={css.SrcButton}>Go back</button>\n          </Link>\n          <div className={`${css.container} ${css.movieDetailsContainer}`}>\n            <img\n              src={movie.poster_path ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}` : 'default_image_url'}\n              alt={movie.title}\n              style={{ marginRight: 30 }}\n            />\n            <div>\n              <h3>{movie.title}</h3>\n              <p>User Score: {parseInt(movie.popularity)}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{movie.genres?.map((gen) => gen.name).join(', ')}</p>\n            </div>\n          </div>\n          <hr />\n          <div className={css.additionalInfo}>\n            <h3 style={{ fontSize: 20 }}>Additional information</h3>\n            <Link to={`/movies/${movieId}/cast`} style={{ marginRight: 20, fontSize: 20 }}>\n              Cast\n            </Link>\n            <Link to={`/movies/${movieId}/reviews`} style={{ fontSize: 20 }}>\n              Reviews\n            </Link>\n          </div>\n          <div style={{ margin: '15px 0' }}>\n            <Outlet />\n          </div>\n        </>\n      )}\n      {!isLoading && !movieId && (\n        <div>\n          <p>No movie selected.</p>\n          <Link to=\"/\">Go back to the movie list</Link>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"Forminput\":\"Form_Forminput__yIu28\",\"Formf\":\"Form_Formf__DgwX2\",\"SrcButton\":\"Form_SrcButton__6xSfC\",\"container\":\"Form_container__uY-JG\"};"],"names":["movieApi","axios","baseURL","params","api_key","fetchMovies","async","get","data","results","fetchMoviesByQuery","query","searchQuery","fetchMoviesById","concat","id","append_to_response","error","console","message","fetchCastById","fetchReviewsById","MovieDetailsPage","_movie$genres","movieId","useParams","movie","setMovie","useState","title","poster_path","popularity","overview","genres","movieLocation","setMovieLocation","isLoading","setIsLoading","location","useLocation","useEffect","_location$state","state","from","movieData","fetchById","_jsxs","_Fragment","children","_jsx","Link","to","className","css","src","alt","style","marginRight","parseInt","map","gen","name","join","fontSize","margin","Outlet"],"sourceRoot":""}