{"version":3,"file":"static/js/602.23c69e59.chunk.js","mappings":"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","sources":["components/Api/Api.js","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst api_key = '9ec68717ac0ee3cd927e52637a51d9f9';\n\nconst movieApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: api_key,\n  },\n});\n\nexport const fetchMovies = async () => {\n  const response = await movieApi.get('trending/movie/day');\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async (searchQuery) => {\n  const response = await movieApi.get('/search/movie', {\n    params: { query: searchQuery },\n  });\n  return response.data.results;\n};\n\nexport const fetchMoviesById = async (id) => {\n  try {\n    const response = await movieApi.get(`/movie/${id}`, {\n      params: {\n        append_to_response: 'credits,reviews',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie by ID:', error.message);\n    throw error;\n  }\n};\n\nexport const fetchCastById = async (id) => {\n  const response = await movieApi.get(`/movie/${id}/credits`);\n  return response.data;\n};\n\nexport const fetchReviewsById = async (id) => {\n  const response = await movieApi.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesById } from '../components/Api/Api';\n\nconst MovieDetailsPage = () => {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [movieLocation, setMovieLocation] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.state?.from) setMovieLocation(location.state.from);\n  }, [location.state]);\n\n  useEffect(() => {\n    const fetchById = async () => {\n      try {\n        const movie = await fetchMoviesById(moviesId);\n        setMovie(movie);\n      } catch (error) {\n        console.error('Error fetching movie by ID:', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchById();\n  }, [moviesId]);\n\n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {!isLoading && movie.title && (\n        <>\n          <Link to={movieLocation || '/'}>&lt; Go back</Link>\n          <div style={{ display: 'flex' }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n              alt={movie.title}\n              style={{ marginRight: 30 }}\n            />\n            <div>\n              <h3>{movie.title}</h3>\n              <p>User Score: {parseInt(movie.popularity)}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{movie.genres?.map((gen) => gen.name).join(', ')}</p>\n            </div>\n          </div>\n          <hr />\n          <div>\n            <h3>Additional information</h3>\n            <Link to={`${moviesId}/cast`} style={{ marginRight: 15 }}>\n              Casts\n            </Link>\n            <Link to={`${moviesId}/reviews`}>Reviews</Link>\n          </div>\n          <div style={{ margin: '15px 0' }} className=\"Casts\">\n            <Outlet />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["movieApi","axios","baseURL","params","api_key","fetchMovies","async","get","data","results","fetchMoviesByQuery","query","searchQuery","fetchMoviesById","concat","id","append_to_response","error","console","message","fetchCastById","fetchReviewsById","MovieDetailsPage","_movie$genres","moviesId","useParams","movie","setMovie","useState","movieLocation","setMovieLocation","isLoading","setIsLoading","location","useLocation","useEffect","_location$state","state","from","fetchById","_jsxs","_Fragment","children","_jsx","title","Link","to","style","display","src","poster_path","alt","marginRight","parseInt","popularity","overview","genres","map","gen","name","join","margin","className","Outlet"],"sourceRoot":""}